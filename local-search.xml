<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>flsk学习日记</title>
    <link href="/2024/04/24/flsk%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/"/>
    <url>/2024/04/24/flsk%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<p>flask知识点</p><p>Flask 是一个用 Python 编写的轻量级 Web 应用框架。以下是 Flask 的一些关键知识点，以 Markdown 格式呈现：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-section"># Flask 知识点概览</span><br>Flask 是一个用 Python 编写的轻量级 Web 应用框架。它被设计为易于使用和扩展，是快速开发 Web 应用的不错选择。<br><br><span class="hljs-section">## 安装 Flask</span><br><span class="hljs-code">```bash</span><br><span class="hljs-code">pip install Flask</span><br></code></pre></td></tr></table></figure><h2 id="创建一个基本的-Flask-应用"><a href="#创建一个基本的-Flask-应用" class="headerlink" title="创建一个基本的 Flask 应用"></a>创建一个基本的 Flask 应用</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask<br>app = Flask(__name__)<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">hello_world</span>():<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Hello, World!&#x27;</span><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run(debug=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure><h2 id="路由（Routes）"><a href="#路由（Routes）" class="headerlink" title="路由（Routes）"></a>路由（Routes）</h2><p>路由是 URL 到应用功能的映射。在 Flask 中，路由使用 <code>@app.route()</code> 装饰器定义。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/hello/&lt;name&gt;&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">hello</span>(<span class="hljs-params">name</span>):<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">f&#x27;Hello, <span class="hljs-subst">&#123;name&#125;</span>!&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="模板（Templates）"><a href="#模板（Templates）" class="headerlink" title="模板（Templates）"></a>模板（Templates）</h2><p>Flask 使用 Jinja2 作为模板引擎，允许你生成 HTML 文件。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- templates/hello.html --&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Hello Page<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Hello, &#123;&#123; name &#125;&#125;!<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> render_template<br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/template/&lt;name&gt;&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">template</span>(<span class="hljs-params">name</span>):<br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;hello.html&#x27;</span>, name=name)<br></code></pre></td></tr></table></figure><h2 id="表单处理（Form-Handling）"><a href="#表单处理（Form-Handling）" class="headerlink" title="表单处理（Form Handling）"></a>表单处理（Form Handling）</h2><p>Flask 可以处理 HTML 表单，使用 <code>request</code> 对象获取表单数据。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> request<br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/form&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">form</span>():<br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;POST&#x27;</span>:<br>        name = request.form.get(<span class="hljs-string">&#x27;name&#x27;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">f&#x27;Hello, <span class="hljs-subst">&#123;name&#125;</span>!&#x27;</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">        &lt;form method=&quot;post&quot;&gt;</span><br><span class="hljs-string">            &lt;input type=&quot;text&quot; name=&quot;name&quot;&gt;</span><br><span class="hljs-string">            &lt;input type=&quot;submit&quot; value=&quot;Say Hello&quot;&gt;</span><br><span class="hljs-string">        &lt;/form&gt;</span><br><span class="hljs-string">    &#x27;&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="数据库操作（Database-Operations）"><a href="#数据库操作（Database-Operations）" class="headerlink" title="数据库操作（Database Operations）"></a>数据库操作（Database Operations）</h2><p>Flask 可以与各种数据库进行交互，常用的有 SQLite、MySQL、PostgreSQL 等。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> g<br><span class="hljs-meta">@app.before_first_request</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">init_db</span>():<br>    g.db = sqlite3.connect(<span class="hljs-string">&#x27;example.db&#x27;</span>)<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/add&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>():<br>    cursor = g.db.cursor()<br>    cursor.execute(<span class="hljs-string">&#x27;INSERT INTO users (name) VALUES (?)&#x27;</span>, (<span class="hljs-string">&#x27;John Doe&#x27;</span>,))<br>    g.db.commit()<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;User added.&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="错误处理（Error-Handling）"><a href="#错误处理（Error-Handling）" class="headerlink" title="错误处理（Error Handling）"></a>错误处理（Error Handling）</h2><p>Flask 允许你捕获并处理错误。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">@app.errorhandler(<span class="hljs-params"><span class="hljs-number">404</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">page_not_found</span>(<span class="hljs-params">e</span>):<br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;404.html&#x27;</span>), <span class="hljs-number">404</span><br></code></pre></td></tr></table></figure><h2 id="部署（Deployment）"><a href="#部署（Deployment）" class="headerlink" title="部署（Deployment）"></a>部署（Deployment）</h2><p>Flask 应用可以部署在多种服务器上，如 Nginx、Apache、Gunicorn 等。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 使用 Gunicorn 部署</span><br>gunicorn -w 4 -b 127.0.0.1:8000 myapp:app<br></code></pre></td></tr></table></figure><h2 id="扩展（Extensions）"><a href="#扩展（Extensions）" class="headerlink" title="扩展（Extensions）"></a>扩展（Extensions）</h2><p>Flask 社区提供了许多扩展，用于添加额外的功能，如用户认证、数据库集成、调试工具等。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install Flask-Login Flask-SQLAlchemy<br></code></pre></td></tr></table></figure><h2 id="调试（Debugging）"><a href="#调试（Debugging）" class="headerlink" title="调试（Debugging）"></a>调试（Debugging）</h2><p>Flask 提供了一个内置的调试器，可以在开发过程中提供帮助。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run(debug=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure><p>以上是 Flask 的一些基本知识点，通过这些知识点，你可以开始构建自己的 Web 应用。</p><pre><code class="hljs">请注意，这些代码和命令仅供示例，实际使用时需要根据你的具体需求和环境进行调整。</code></pre>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>自学</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
